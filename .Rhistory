geom_point(aes(color=factor(`Nivel Economia`), size=`GDP Growth %`))+
labs(x="Penetracion de internet", y="Aporte economia naranja",
title ="Internet y aporte economia naranja, segun economia y crecimiento" )+
#Graficando con plotly
migraf<-ggplot(data=orangeec,
mapping = aes(`Internet penetration % population`, `Creat Ind % GDP`,
label=row.names(orangeec)))+
geom_point(aes(color=factor(`Nivel Economia`), size=`GDP Growth %`))+
labs(x="Penetracion de internet", y="Aporte economia naranja",
title ="Internet y aporte economia naranja, segun economia y crecimiento" )+
migraf
#Graficando con plotly
migraf <- ggplot(data=orangeec,
mapping = aes(`Internet penetration % population`, `Creat Ind % GDP`,
label=row.names(orangeec)))+
geom_point(aes(color=factor(`Nivel Economia`), size=`GDP Growth %`))+
labs(x="Penetracion de internet", y="Aporte economia naranja",
title ="Internet y aporte economia naranja, segun economia y crecimiento" )+
migraf
#Graficando con plotly
migraf <- ggplot(data=orangeec,
mapping = aes(`Internet penetration % population`, `Creat Ind % GDP`,
label=row.names(orangeec)))+
geom_point(aes(color=factor(`Nivel Economia`), size=`GDP Growth %`))+
labs(x="Penetracion de internet", y="Aporte economia naranja",
title ="Internet y aporte economia naranja, segun economia y crecimiento" )+
migraf
p=ggplotly(migraf)
p
ggplot(data=orangeec,
mapping = aes(`Internet penetration % population`, `Creat Ind % GDP`,
label=row.names(orangeec)))+
geom_point(aes(color=factor(`Nivel Economia`), size=`GDP Growth %`))+
labs(x="Penetracion de internet", y="Aporte economia naranja",
title ="Internet y aporte economia naranja, segun economia y crecimiento" )
ggplot(data=orangeec,
mapping = aes(`Internet penetration % population`, `Creat Ind % GDP`))+
geom_point(aes(color=factor(`Nivel Economia`), size=`GDP Growth %`))+
labs(x="Penetracion de internet", y="Aporte economia naranja",
title ="Internet y aporte economia naranja, segun economia y crecimiento" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(data=orangeec,
mapping = aes(`Internet penetration % population`, `Creat Ind % GDP`))+
geom_point(aes(color=factor(`Nivel Economia`), size=`GDP Growth %`))+
labs(x="Penetracion de internet", y="Aporte economia naranja",
title ="Internet y aporte economia naranja, segun economia y crecimiento" )
migraf <- ggplot(data=orangeec,
mapping = aes(`Internet penetration % population`, `Creat Ind % GDP`,
label=row.names(orangeec)))+
geom_point(aes(color=factor(`Nivel Economia`), size=`GDP Growth %`))+
labs(x="Penetracion de internet", y="Aporte economia naranja",
title ="Internet y aporte economia naranja, segun economia y crecimiento" )
migraf
migraf
p=ggplotly(migraf)
p
migraf <- ggplot(data=orangeec,
mapping = aes(`Internet penetration % population`, `Creat Ind % GDP`,
label=row.names(orangeec)))+
geom_point()+
labs(x="Penetracion de internet", y="Aporte economia naranja",
title ="Internet y aporte economia naranja, segun economia y crecimiento" )
migraf
p=ggplotly(migraf)
p
library(readr)
orangeec <- read_csv("agroup.csv")
orangeec <- read_csv("proyecto real/agroup.csv")
agroup <- read_csv("proyecto real/agroup.csv")
View(agroup)
?read_csv
library(readr)
agroup <- read_delim("proyecto real/agroup.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(agroup)
pairs(agroup)
agroup
pairs(agroup[,2:8])
pairs(agroup[,5:8])
colnames(agroup)[colnames(agroup) == "total"] <- "Keyword organicas"
pairs(agroup[,5:8])
cor(agroup[,5:8])
pairs(agroup[,5:8], title="tabla")
ggplot(data=orangeec,
mapping=aes(x=`GDP PC`))+
geom_histogram(binwidth = 2000)+
labs(x="PBI per", y="Cantidad de carros", title="PIB per en paises LATAM")+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
orangeec <- read_csv("orangeec.csv")
mtcars <- read_csv("mtcars.csv")
ggplot(data = mtcars,
mapping = aes(x = hp)) +
geom_histogram(aes(y =..density..),
bins = 9,
position = 'identity') +
stat_function(fun = dnorm,
args = list(mean = mean(mtcars$hp),
sd = sd(mtcars$hp)))
library(ggplot2)
ggplot(data=mtcars,
mapping = aes(x=as.factor(cyl), y=hp, fill= cyl))+
geom_boxplot()+
labs(x="cilindros", y="caballos de fuerza",
title ="Caballos de fuerza segun cilindros " )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(data=mtcars,
mapping = aes(x=as.factor(am), y=mpg, fill=am))+
geom_boxplot()+
labs(x="Tipo de caja", y="Millas por galon",
title ="Millas por galon segun tipo de caja" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(data=orangeec,
mapping = aes(x=`Nivel Economia`, y=`Creat Ind % GDP`,
fill=`Nivel Economia`))+
geom_boxplot()+
labs(x="Tipo de caja", y="Millas por galon",
title ="Millas por galon segun tipo de caja" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
cor(agroup[,5:8])
ggplot(data=agroup,
mapping = aes(`Keyword organicas`, `Organic traffic`))+
geom_point()+
labs(x="Penetracion de internet", y="Aporte economia naranja",
title ="Internet y aporte economia naranja, segun economia y crecimiento" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(data=agroup,
mapping = aes(`Keyword organicas`, `Organic traffic`))+
geom_point()+
labs(x="Keyword organicas", y="Organic traffic",
title ="Relacion de Keywords con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(data=agroup,
mapping = aes(`Keyword organicas`, `Organic traffic`))+
geom_point()+
labs(x="Keyword organicas", y="Organic traffic")+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(data=agroup,
mapping = aes(`Keyword organicas`, `Organic traffic`))+
geom_point()+
labs(x="Keyword organicas", y="Organic traffic",
title ="Relacion de Keywords con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(data=agroup,
mapping = aes(dominios, `Keyword organicas`))+
geom_point()+
labs(x="dominios", y="Keyword organicas",
title ="Relacion de Keywords con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
agroup$
ggplot(data=agroup,
mapping = aes(dominios, `Keyword organicas`))+
geom_point()+
labs(x="dominios", y="Keyword organicas",
title ="Relacion de los dominios con los keywords" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(data=agroup,
mapping = aes(dominios, `Keyword organicas`))+
geom_point()+
labs(x="dominios", y="Keyword organicas",
title ="Relacion de los dominios con los keywords" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(data=agroup,
mapping = aes(pages, `Organic traffic`))+
geom_point()+
labs(x="pages", y="Organic traffic",
title ="Relacion de pages con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
library(dplyr)
agroup <- agroup %>%
mutate(pagesper = pages/dominios)
orangeec$pagesper
agroup$pagesper
ggplot(data=agroup,
mapping = aes(pagesper, `Organic traffic`))+
geom_point()+
labs(x="paginas por dominio", y="Organic traffic",
title ="Relacion paginas por dominio con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
pairs(agroup[,6,8])
pairs(agroup[,6:8])
pairs(agroup[,6:9])
cor(agroup[,6:9])
plot(agroup$`Organic traffic`)
plot(agroup$`Organic traffic`, agroup$`Keyword organicas`)
ggplot(data=agroup,
mapping = aes(pagesper, `Organic traffic`))+
geom_point()+
labs(x="paginas por dominio", y="Organic traffic",
title ="Relacion paginas por dominio con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
library(readr)
orangeec <- read_csv("orangeec.csv")
mtcars <- read_csv("mtcars.csv")
?%>%
?"%>%
?"%>%"
eficientes<-mean(mtcars$mpg)
mtcars <- mtcars %>%
mutate(maseficientes=ifelse(mpg<eficientes,"bajo promedio","sobre promedio"))
mtcars
View(mtcars)
eficientes<-mean(mtcars$mpg)
mtcars <- mtcars %>%
mutate(maseficientes=ifelse(mpg<eficientes,"bajo promedio","sobre promedio"))
View(mtcars)
#filtrado con seleccion
masveloces<-mtcars[mtcars$qsec>16,]
masveloces
masveloces<-mtcars[mtcars$qsec>16,]
masveloces
mtcars<-mtcars %>%
mutate(velocidad=ifelse(qsec<16,"menos de 16","mas de 16"))
mtcars<-mtcars%>%
mutate(Pesokilos=((wt/2)*1000))
mtcars<-mtcars%>%
mutate(Pesokilos=((wt/2)*1000))
mtcars<-mtcars%>%
mutate(Peso=ifelse(peso<=1500,"Liviano", "Pesado"))
#Agregar nueva columna en nuestra data
mtcars<-mtcars%>%
mutate(Pesokilos=((wt/2)*1000))
mtcars<-mtcars%>%
mutate(Peso=ifelse(Pesokilos<=1500,"Liviano", "Pesado"))
library(readr)
orangeec <- read_csv("orangeec.csv")
mtcars <- read_csv("mtcars.csv")
ec <- orangeec %>%
mutate(Crecimient
orangeec <- orangeec %>%
mutate(Crecimiento_gdp=ifelse(`GDP Growth %`>=2.5,"Mayor a 2.5","Menor a 2.5"))
orangeec <- orangeec %>%
mutate(Crecimiento_gdp=ifelse(`GDP Growth %`>=2.5,"Mayor a 2.5","Menor a 2.5"))
orangeec$Crecimiento_gdp
View(orangeec)
source('E:/Github/practicas/Tercera.R', echo=TRUE)
source('E:/Github/practicas/Tercera.R', echo=TRUE)
#Ranking
orangeec <- orangeec %>%
arrange(desc(`Creat Ind % GDP`))
x<-c(1,2,3,4,5)
y<-rep(Dereck, 5)
x<-c(1,2,3,4,5)
y<-rep("Dereck"", 5)
x
y
x<-c(1,2,3,4,5)
y<-rep("Dereck", 5)
x
y
seq(0,10,by=2)
seq(0,10,by=2)
seq(0,20 length.out = 9)
seq(0,20 length.out = 9)
seq(0,20, length.out = 9)
z
y= seq(1,10)
z=2+10*y
z
?"sapply"
cuadrado = function(x){x^2}
v = c(1,2,3,4,5,6)
sapply(v, FUN = cuadrado)
mean(v)
cumsum(v)
u=1:5
elevado=function(x){x^x}
elevado(u)
u=1:5
elevado=function(x){x^x}
elevado(u)
#Otra forma
sapply(u, FUN=elevado)
y=1:10
x=11:20
z=x*y
z
x=1:10
cumsum(x)
x=1:10
cumsum(x)
y=c(1,4,6,8,2,3)
sort(y)
cummax(x)
cummin(x)
diff(x)
agroup <- read_delim("proyecto real/agroup.csv",
+     ";", escape_double = FALSE, trim_ws = TRUE)
colnames(agroup)[colnames(agroup) == "total"] <- "Keyword organicas"
View(agroup)
pairs(agroup[,5:8])
agroup <- read_delim("proyecto real/agroup.csv",
+     ";", escape_double = FALSE, trim_ws = TRUE)
colnames(agroup)[colnames(agroup) == "total"] <- "Keyword organicas"
View(agroup)
agroup <- read_delim("proyecto real/agroup.csv",
+     ";", escape_double = FALSE, trim_ws = TRUE)
colnames(agroup)[colnames(agroup) == "total"] <- "Keyword organicas"
View(agroup)
pairs(agroup[,5:8])
ggplot(data=agroup,
mapping = aes(pagesper, `Organic traffic`))+
geom_point()+
labs(x="paginas por dominio", y="Organic traffic",
title ="Relacion paginas por dominio con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
plot(agroup$`Organic traffic`, agroup$`Keyword organicas`)
pairs(agroup[,5:8])
ggplot(data=agroup,
mapping = aes(dominios, `Organic traffic`))+
geom_point()+
labs(x="paginas por dominio", y="Organic traffic",
title ="Relacion paginas por dominio con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
plot(agroup$`Organic traffic`, agroup$`Keyword organicas`)
ggplot(data=agroup,
mapping = aes(`Organic traffic`, dominios ))+
geom_point()+
labs(x="paginas por dominio", y="Organic traffic",
title ="Relacion paginas por dominio con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
plot(agroup$`Organic traffic`, agroup$`Keyword organicas`)
ggplot(data=agroup,
mapping = aes(`Organic traffic`, dominios ))+
geom_point()+
labs(x="paginas por dominio", y="Organic traffic",
title ="Relacion paginas por dominio con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
plot(agroup$`Organic traffic`, agroup$`Keyword organicas`)
lot(data=agroup,
mapping = aes(`Organic traffic`, dominios ))+
geom_point()+
labs(x="paginas por dominio", y="Organic traffic",
title ="Relacion paginas por dominio con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
plot(agroup$`Organic traffic`, agroup$`Keyword organicas`)
ggplot(data=agroup,
mapping = aes(`Organic traffic`, dominios ))+
geom_point()+
labs(x="paginas por dominio", y="Organic traffic",
title ="Relacion paginas por dominio con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
plot(agroup$`Organic traffic`, agroup$`Keyword organicas`)
library(ggplot2)
ggplot(data=agroup,
mapping = aes(`Organic traffic`, dominios ))+
geom_point()+
labs(x="paginas por dominio", y="Organic traffic",
title ="Relacion paginas por dominio con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
plot(agroup$`Organic traffic`, agroup$`Keyword organicas`)
ggplot(data=agroup,
mapping = aes(`Organic traffic`, pages ))+
geom_point()+
labs(x="paginas por dominio", y="Organic traffic",
title ="Relacion paginas por dominio con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
plot(agroup$`Organic traffic`, agroup$`Keyword organicas`)
ggplot(data=agroup,
mapping = aes(pages, `Organic traffic` ))+
geom_point()+
labs(x="paginas por dominio", y="Organic traffic",
title ="Relacion paginas por dominio con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
plot(agroup$`Organic traffic`, agroup$`Keyword organicas`)
ggplot(data=agroup,
mapping = aes(pages, `Keyword organicas` ))+
geom_point()+
labs(x="paginas por dominio", y="Organic traffic",
title ="Relacion paginas por dominio con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
plot(agroup$`Organic traffic`, agroup$`Keyword organicas`)
ggplot(data=agroup,
mapping = aes(pages, `Organic traffic` ))+
geom_point()+
labs(x="paginas por dominio", y="Organic traffic",
title ="Relacion paginas por dominio con el trafico organico" )+
theme(legend.position = "none")+
theme(panel.background = element_blank(),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
2*5==5
#R puede modificar una matriz
y=1:10
y[5]=8 #R remplazara el numero de la posicion 5 con el 8
y[11]=47 #Incluso podemos agregar un elemento mas
length(y)
is.na(y)
2*5==5
#R puede modificar una matriz
y=1:10
y[5]=8 #R remplazara el numero de la posicion 5 con el 8
y[15]=47 #Incluso podemos agregar un elemento mas
length(y)
is.na(y)
which(is.na(y))
x[which(is.na(y))] #Asi comprobamos que son NA
2*5==5
#R puede modificar una matriz
y=1:10
y[5]=8 #R remplazara el numero de la posicion 5 con el 8
y[15]=47 #Incluso podemos agregar un elemento mas
length(y)
is.na(y) #is.na nos devuelve como TRUE las valores que son NA
which(is.na(y)) #El which nos da las posiciones de los valores TRUE los cuales son NA
x[which(is.na(y))] #Asi comprobamos que son NA
mean(y, na.rm=TRUE)
mean(y, na.rm=FALSE)
y[is.na(y)]=mean(y, na.rm = TRUE)
y
s=1:10
s[15]=20
s
s[!is.na(s)]
mean(s[!is.na(s)])
s=1:10
s[15]=20
s[!is.na(s)] #Son los valores que no son NA
mean(s[!is.na(s)])
na.omit(s)
s=1:10
s[15]=20
s[!is.na(s)] #Son los valores que no son NA
mean(s[!is.na(s)])
s
na.omit(s)
s
na.omit(s)
s = s(-is.na(s))
s = s[-is.na(s)]
s
s=1:10
s[15]=20
s[!is.na(s)] #Son los valores que no son NA
mean(s[!is.na(s)])
s
na.omit(s)
s = s[-is.na(s)]
s
p = s[-is.na(s)]
p
p = s[!is.na(s)]
p
autos<-c("Kia","Audi","Audi","Nissan","Audi","Kia")
autos.factor=factor(autos)
autos.factor
alumnos = c(1:10)
notas = c(2,5,7,9,8,3,5,6,10,7)
plot(alumnos,notas)
alumnos = c(1:10)
notas = c(2,5,7,9,8,3,5,6,10,7)
plot(alumnos,notas)
alumnos = c(1:10)
notas = c(2,5,7,9,8,3,5,6,10,7)
plot(alumnos,notas, main="relacion")
alumnos = c(1:10)
notas = c(2,5,7,9,8,3,5,6,10,7)
plot(alumnos,notas, main="Relacion entre alumnos y notas")
alumnos = c(1:10)
notas = c(2,5,7,9,8,3,5,6,10,7)
plot(alumnos,notas, main="Relacion entre alumnos y notas")
alumnos = c(1:10)
notas = c(2,5,7,9,8,3,5,6,10,7)
plot(alumnos,notas, main="Relacion entre alumnos y notas")
